import GUI from"../../../../../../libs/lil-gui.min.js";import{saveAs}from"../../../../../../libs/FileSaver.js";import{initPreviewCssFn}from"./css.js";import{demoData}from"../../../../demo-data.js";import{defaultImageOptions,saveOptionsFn,getOptionsFn,uploadImageFn}from"../options.js";const initOpts=demoData,optionsParams={};function refreshJoppInitJSON(){return Object.assign(initOpts.templateInfo,{name:optionsParams.name},{options:{id:optionsParams.url,color:optionsParams.color,title:optionsParams.title,strokeTitle:optionsParams.strokeTitle,subtitle:optionsParams.subtitle,author:optionsParams.author}}),initOpts}async function applyJoppInit(){refreshJoppInitJSON(),saveOptionsFn(initOpts.templateInfo.options),await window.joppInit(initOpts)}function getJoppPreviewPath(t){const o=(t=t||new URL(document.location.href)).searchParams.get("joppPreview");if(!o)return;const{origin:a,pathname:n}=t;return/^http[s]?:\/\//i.test(o)?o:/^true$/i.test(o)?a+n.substring(0,n.lastIndexOf("/"))+"/template.json":/^\//.test(o)?a+o:a+n.substring(0,n.lastIndexOf("/"))+"/"+o}function initGUI(){const{templateInfo:t}=initOpts,o=Object.assign({},defaultImageOptions,getOptionsFn(),t.options),a=new GUI;Object.assign(optionsParams,{name:t.name,url:o.id||"",color:o.color||"black",title:o.title||"",strokeTitle:!!o.strokeTitle,subtitle:o.subtitle||"",author:o.author||"",uploadImage:()=>{uploadImageFn((t=>{n.setValue(""+t)}))},resetDefault:()=>{Object.assign(optionsParams,defaultImageOptions,{name:"Image Cover"}),applyJoppInit();a.controllersRecursive().forEach((t=>t.updateDisplay()))},downloadJSON:()=>{const t=refreshJoppInitJSON(),o=getJoppPreviewPath(),a=new Blob([JSON.stringify({...t.templateInfo,path:o,template_version:1},null,2)],{type:"text/plain;charset=utf-8"});saveAs(a,optionsParams.name+"_template.json")}},t.options),a.add(optionsParams,"name").onChange(applyJoppInit),a.add(optionsParams,"uploadImage");const n=a.add(optionsParams,"url").onChange(applyJoppInit);a.addColor(optionsParams,"color").onChange(applyJoppInit),a.add(optionsParams,"title").onChange(applyJoppInit),a.add(optionsParams,"strokeTitle").onChange(applyJoppInit),a.add(optionsParams,"subtitle").onChange(applyJoppInit),a.add(optionsParams,"author").onChange(applyJoppInit),a.add(optionsParams,"resetDefault"),a.add(optionsParams,"downloadJSON")}!async function(){const t=getJoppPreviewPath();if(t){const o=await fetch(t),a=await o.json();a.margin;Object.assign(initOpts,{templateInfo:a}),await joppInit(initOpts),initGUI(),initPreviewCssFn()}}();