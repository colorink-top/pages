import GUI from"../../../../../../libs/lil-gui.min.js";import{saveAs}from"../../../../../../libs/FileSaver.js";import{initPreviewCssFn}from"./css.js";import{demoData}from"../../../../demo-data.js";import{defaultImageOptions,saveOptionsFn,getOptionsFn,uploadImageFn}from"../options.js";const initOpts=demoData,optionsParams={};function refreshJoppInitJSON(){return Object.assign(initOpts.templateInfo,{name:optionsParams.name},{options:{id:optionsParams.url,color:optionsParams.color,hideDetail:optionsParams.hideDetail}}),initOpts}async function applyJoppInit(){refreshJoppInitJSON(),saveOptionsFn(initOpts.templateInfo.options),await window.joppInit(initOpts)}function getJoppPreviewPath(t){const a=(t=t||new URL(document.location.href)).searchParams.get("joppPreview");if(!a)return;const{origin:o,pathname:n}=t;return/^http[s]?:\/\//i.test(a)?a:/^true$/i.test(a)?o+n.substring(0,n.lastIndexOf("/"))+"/template.json":/^\//.test(a)?o+a:o+n.substring(0,n.lastIndexOf("/"))+"/"+a}function initGUI(){const{templateInfo:t}=initOpts,a=Object.assign({},defaultImageOptions,getOptionsFn(),t.options),o=new GUI;Object.assign(optionsParams,{name:t.name,url:a.id||"",color:a.color||"black",hideDetail:!!a.hideDetail,uploadImage:()=>{uploadImageFn((t=>{n.setValue(""+t)}))},resetDefault:()=>{Object.assign(optionsParams,defaultImageOptions,{name:"Image Cover"}),applyJoppInit();o.controllersRecursive().forEach((t=>t.updateDisplay()))},downloadJSON:()=>{const t=refreshJoppInitJSON(),a=getJoppPreviewPath(),o=new Blob([JSON.stringify({...t.templateInfo,path:a,template_version:1},null,2)],{type:"text/plain;charset=utf-8"});saveAs(o,optionsParams.name+"_template.json")}},t.options),o.add(optionsParams,"name").onChange(applyJoppInit),o.add(optionsParams,"uploadImage");const n=o.add(optionsParams,"url").onChange(applyJoppInit);o.addColor(optionsParams,"color").onChange(applyJoppInit),o.add(optionsParams,"hideDetail").onChange(applyJoppInit),o.add(optionsParams,"resetDefault"),o.add(optionsParams,"downloadJSON")}!async function(){const t=getJoppPreviewPath();if(t){const a=await fetch(t),o=await a.json();o.margin;Object.assign(initOpts,{templateInfo:o}),await joppInit(initOpts),initGUI(),initPreviewCssFn()}}();