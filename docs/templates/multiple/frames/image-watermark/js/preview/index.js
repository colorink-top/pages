import GUI from"../../../../../libs/lil-gui.min.js";import{saveAs}from"../../../../../libs/FileSaver.js";import{initPreviewCssFn}from"./css.js";import{demoData}from"../../../demo-data.js";import{defaultWatermarkOptions,saveOptionsFn,getOptionsFn,uploadImageFn}from"../options.js";const initOpts=demoData,optionsParams={};function refreshJoppInitJSON(){return Object.assign(initOpts.templateInfo,{name:optionsParams.name},{options:{id:optionsParams.url,size:optionsParams.size,opacity:optionsParams.opacity,angle:optionsParams.angle,x:optionsParams.x,y:optionsParams.y,hideSaveDate:optionsParams.hideSaveDate,hideHeader:optionsParams.hideHeader,hideFooter:optionsParams.hideFooter}}),initOpts}async function applyJoppInit(){refreshJoppInitJSON(),saveOptionsFn(initOpts.templateInfo.options),await window.joppInit(initOpts)}function getJoppPreviewPath(a){const t=(a=a||new URL(document.location.href)).searchParams.get("joppPreview");if(!t)return;const{origin:e,pathname:o}=a;return/^http[s]?:\/\//i.test(t)?t:/^true$/i.test(t)?e+o.substring(0,o.lastIndexOf("/"))+"/template.json":/^\//.test(t)?e+t:e+o.substring(0,o.lastIndexOf("/"))+"/"+t}function initGUI(){const{templateInfo:a}=initOpts,t=Object.assign({},defaultWatermarkOptions,getOptionsFn(),a.options),e=new GUI;Object.assign(optionsParams,{name:a.name,url:t.id||"",size:parseFloat(t.size)||100,opacity:parseFloat(t.opacity)||.3,angle:parseInt(t.angle)||45,x:parseInt(t.x)||0,y:parseInt(t.y)||0,hideSaveDate:!!t.hideSaveDate,hideHeader:!!t.hideHeader,hideFooter:!!t.hideFooter,uploadImage:()=>{uploadImageFn((a=>{o.setValue(""+a)}))},resetDefault:()=>{Object.assign(optionsParams,defaultWatermarkOptions,{name:"Image Watermark"}),applyJoppInit();e.controllersRecursive().forEach((a=>a.updateDisplay()))},downloadJSON:()=>{const a=refreshJoppInitJSON(),t=getJoppPreviewPath(),e=new Blob([JSON.stringify({...a.templateInfo,path:t,template_version:1},null,2)],{type:"text/plain;charset=utf-8"});saveAs(e,optionsParams.name+"_template.json")}},a.options),e.add(optionsParams,"name").onChange(applyJoppInit),e.add(optionsParams,"uploadImage");const o=e.add(optionsParams,"url").onChange(applyJoppInit);e.add(optionsParams,"size",10,400).onChange(applyJoppInit),e.add(optionsParams,"opacity",0,1).onChange(applyJoppInit),e.add(optionsParams,"angle",0,360).onChange(applyJoppInit),e.add(optionsParams,"x",-50,50,1).onChange(applyJoppInit),e.add(optionsParams,"y",-50,50,1).onChange(applyJoppInit),e.add(optionsParams,"hideSaveDate").onChange(applyJoppInit),e.add(optionsParams,"hideHeader").onChange(applyJoppInit),e.add(optionsParams,"hideFooter").onChange(applyJoppInit),e.add(optionsParams,"resetDefault"),e.add(optionsParams,"downloadJSON")}!async function(){const a=getJoppPreviewPath();if(a){const t=await fetch(a),e=await t.json();e.margin;Object.assign(initOpts,{templateInfo:e}),await joppInit(initOpts),initGUI(),initPreviewCssFn()}}();