import GUI from"../../../../../libs/lil-gui.min.js";import{saveAs}from"../../../../../libs/FileSaver.js";import{initPreviewCssFn}from"./css.js";import{demoData}from"../../../demo-data.js";import{uploadStampFn,setDefaultStampIdFn,getDefaultStampIdFn}from"../stamp.js";const stampExamples={},initOpts=demoData,optionsParams={};function refreshJoppInitJSON(){return Object.assign(initOpts.templateInfo,{name:optionsParams.name},{options:{stampURL:optionsParams.stampURL}}),initOpts}async function applyJoppInit(){refreshJoppInitJSON(),await window.joppInit(initOpts)}function getJoppPreviewPath(t){const a=(t=t||new URL(document.location.href)).searchParams.get("joppPreview");if(!a)return;const{origin:n,pathname:s}=t;return/^http[s]?:\/\//i.test(a)?a:/^true$/i.test(a)?n+s.substring(0,s.lastIndexOf("/"))+"/template.json":/^\//.test(a)?n+a:n+s.substring(0,s.lastIndexOf("/"))+"/"+a}function initGUI(){const{templateInfo:t}=initOpts,a=new GUI;Object.assign(optionsParams,{name:t.name,uploadStamp:()=>{uploadStampFn((t=>{n.setValue(t)}))},stampURL:t.options?.stampURL||getDefaultStampIdFn(),downloadJSON:()=>{const t=refreshJoppInitJSON(),a=getJoppPreviewPath(),n=new Blob([JSON.stringify({...t.templateInfo,path:a,template_version:1},null,2)],{type:"text/plain;charset=utf-8"});saveAs(n,optionsParams.name+"_template.json")}},t.options),a.add(optionsParams,"name").onChange(applyJoppInit),a.add({preset:""},"preset",Object.keys(stampExamples)).onChange((t=>{const a=stampExamples[t];a&&n.setValue(a.url)})),a.add(optionsParams,"uploadStamp");const n=a.add(optionsParams,"stampURL").onChange((()=>{setDefaultStampIdFn(optionsParams.stampURL),applyJoppInit()}));a.add(optionsParams,"downloadJSON")}!async function(){const t=getJoppPreviewPath();if(t){const a=await fetch(t),n=await a.json();n.margin;Object.assign(initOpts,{templateInfo:n}),await joppInit(initOpts),initGUI(),initPreviewCssFn()}}();